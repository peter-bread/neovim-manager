#!/usr/bin/env bash

function _title() {
  local title="\e[1;4m"
  local reset="\e[0m"
  echo -e "${title}${1}${reset}:"
}

function _help() {

  echo "Manage Neovim installation."
  echo
  echo "Usage: neovim-manager <command> [<args>]"
  echo
  _title "Commands"
  echo "  install       install a neovim build"
  echo "  use           use specified neovim build"
  echo "  uninstall     uninstall a neovim build"
  echo "  update        update a neovim build"
}

function _install_help() {
  echo "Install Neovim."
  echo
  echo "Usage: neovim-manager install <build>"
  echo
  _title "Builds"
  echo "  stable      latest stable release"
  echo "  nightly     latest nightly release"
  echo
  echo "If no build is given, default to stable"
}

function use() {
  if [[ $# -ne 1 ]]; then
    echo "Error: incorrect arguments"
    return 1
  fi

  VERSION="$1"

  [[ -L "$HOME/.local/bin/nvim" ]] && rm "$HOME/.local/bin/nvim"

  ln -sf "$HOME/.local/opt/nvim-$VERSION/bin/nvim" "$HOME/.local/bin/nvim"
}

function uninstall() {
  # TODO: if only one version installed, default to uninstalling it

  if [[ $# -ne 1 ]]; then
    echo "Error: incorrect arguments"
    return 1
  fi

  VERSION="$1"

  [[ -L "$HOME/.local/bin/nvim" ]] && rm "$HOME/.local/bin/nvim"

  [[ -n $VERSION && -d "$HOME/.local/opt/nvim-$VERSION" ]] &&
    rm -rf --preserve-root "$HOME/.local/opt/nvim-$VERSION"
}

function get_os() {
  OS=""

  case "$(uname -s)" in
  *Linux*)
    OS="linux"
    ;;
  *Darwin*)
    OS="macos"
    ;;
  esac
}

function get_arch() {
  ARCH=""

  local temp
  temp=$(uname -m)

  case "$temp" in
  x86_64 | arm64)
    ARCH="$temp"
    ;;
  esac
}

function install() {

  if [[ -n "$1" && "$1" == "help" ]]; then
    _install_help
    return 1
  fi

  GITHUB_URL="https://github.com/neovim/neovim/releases/download"
  VERSION="${1:-stable}"

  get_os
  get_arch
  FORMAT="tar.gz"

  if [[ -z "$OS" ]]; then
    echo "Error: could not determine OS"
    return 1
  fi

  if [[ -z "$ARCH" ]]; then
    echo "Error: could not determine CPU architecture"
    return 1
  fi

  NAME="nvim-$OS-$ARCH"
  ARCHIVE="$NAME.$FORMAT"

  cd "$HOME" || exit

  wget --quiet "$GITHUB_URL/$VERSION/$ARCHIVE"
  # gh release download "$VERSION" -R neovim/neovim -p "$ARCHIVE"

  echo "Extracting files..."
  tar xzvf "$ARCHIVE" &>/dev/null

  # user install
  mkdir -p "$HOME/.local/opt"
  mkdir -p "$HOME/.local/bin"

  uninstall "$VERSION"

  mv "./$NAME" "$HOME/.local/opt/nvim-$VERSION"

  rm "$ARCHIVE"
}

function main() {
  COMMAND="$1"

  case "$COMMAND" in
  install)
    install "$2"
    ;;
  uninstall)
    uninstall "$2"
    ;;
  use)
    use "$2"
    ;;
  *)
    _help
    ;;
  esac
}

main "$@"
